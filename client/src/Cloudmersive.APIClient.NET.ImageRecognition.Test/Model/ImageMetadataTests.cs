/* 
 * imageapi
 *
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloudmersive.APIClient.NET.ImageRecognition.Api;
using Cloudmersive.APIClient.NET.ImageRecognition.Model;
using Cloudmersive.APIClient.NET.ImageRecognition.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloudmersive.APIClient.NET.ImageRecognition.Test
{
    /// <summary>
    ///  Class for testing ImageMetadata
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ImageMetadataTests
    {
        // TODO uncomment below to declare an instance variable for ImageMetadata
        //private ImageMetadata instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ImageMetadata
            //instance = new ImageMetadata();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ImageMetadata
        /// </summary>
        [Test]
        public void ImageMetadataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ImageMetadata
            //Assert.IsInstanceOfType<ImageMetadata> (instance, "variable 'instance' is a ImageMetadata");
        }


        /// <summary>
        /// Test the property 'Successful'
        /// </summary>
        [Test]
        public void SuccessfulTest()
        {
            // TODO unit test for the property 'Successful'
        }
        /// <summary>
        /// Test the property 'FileFormat'
        /// </summary>
        [Test]
        public void FileFormatTest()
        {
            // TODO unit test for the property 'FileFormat'
        }
        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Test]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }
        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Test]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }
        /// <summary>
        /// Test the property 'BitDepth'
        /// </summary>
        [Test]
        public void BitDepthTest()
        {
            // TODO unit test for the property 'BitDepth'
        }
        /// <summary>
        /// Test the property 'ColorSpace'
        /// </summary>
        [Test]
        public void ColorSpaceTest()
        {
            // TODO unit test for the property 'ColorSpace'
        }
        /// <summary>
        /// Test the property 'ExifProfileName'
        /// </summary>
        [Test]
        public void ExifProfileNameTest()
        {
            // TODO unit test for the property 'ExifProfileName'
        }
        /// <summary>
        /// Test the property 'ExifValues'
        /// </summary>
        [Test]
        public void ExifValuesTest()
        {
            // TODO unit test for the property 'ExifValues'
        }

    }

}
